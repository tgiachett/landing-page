{"version":3,"sources":["components/Profile/Svg.js","components/Profile/SvgJsonContainer.js","components/Profile/Profile.js","App.js","registerServiceWorker.js","index.js"],"names":["Svg","pathsSet","_this","this","props","paths","map","p","i","react_default","a","createElement","key","d","attributes","fill","pathStyleState","concat","xmlns","viewBox","width","height","id","style","preserveAspectRatio","version","React","Component","SvgJsonContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","padZero","str","len","Array","join","slice","hextoRgb","hex","indexOf","parseInt","getRandomColor","color","Math","floor","random","colorTransform","orig","randColorRgb","cycle","setInterval","componentToHex","c","toString","length","r","g","b","splice","setState","defineProperty","abs","clearInterval","state","data","console","log","children","initialState","createState","_this2","setTimeout","Profile_Svg","wholeJson","require","Profile","className","display","flexDirection","marginTop","marginLeft","Profile_SvgJsonContainer","marginRight","fontSize","alignText","margin","padding","href","App","components_Profile_Profile","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b15a965c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Svg extends React.Component {\r\n  \r\n  render() {\r\n    let pathsSet;\r\n    \r\n    if (this.props.paths != null) {\r\n      pathsSet = this.props.paths.map((p,i)=> {\r\n         \r\n        return <path key={i} d={p.attributes.d} fill={this.props.pathStyleState[`style${i}`]}/>\r\n         \r\n     })\r\n    }\r\n    \r\n    \r\n    return (\r\n\r\n    <svg\r\n    xmlns={this.props.xmlns}\r\n    viewBox={this.props.viewBox}\r\n    width={this.props.width}\r\n    height={this.props.height}\r\n    id={this.props.id}\r\n    style={this.props.style}\r\n    preserveAspectRatio={this.props.preserveAspectRatio}\r\n    version=\"1.1\">\r\n\r\n\r\n      \r\n    {pathsSet}\r\n\r\n    </svg> \r\n\r\n    )}\r\n\r\n  }\r\n\r\n    export default Svg ;","import React from 'react';\r\nimport Svg from './Svg';\r\n\r\nclass SvgJsonContainer extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    let data = this.props.data\r\n    \r\n    console.log(data.children[0].attributes.fill)\r\n\r\n    let initialState = {}\r\n    function createState(data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        initialState[`style${i}`] = data[i].attributes.fill;\r\n      }\r\n    }\r\n    createState(data.children)\r\n    \r\n    this.state = initialState\r\n    console.log(initialState)\r\n  }\r\n\r\npadZero = (str, len) => {\r\n    len = len || 2;\r\n    var zeros = new Array(len).join('0');\r\n    return (zeros + str).slice(-len);\r\n}\r\n\r\n\r\nhextoRgb = (hex) => {\r\n  if (hex.indexOf('#') === 0) {\r\n    hex = hex.slice(1);\r\n}\r\n  \r\n  let r = parseInt(hex.slice(0, 2), 16),\r\n      g = parseInt(hex.slice(2, 4), 16),\r\n      b = parseInt(hex.slice(4, 6), 16);\r\n      return [r, g, b]\r\n}\r\n\r\ngetRandomColor =() => {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\n// insert markov chain\r\n\r\ncolorTransform = (orig, key) => {\r\n  let color = this.hextoRgb(orig),\r\n      randColorRgb = this.hextoRgb(this.getRandomColor());\r\n      \r\n\r\nlet cycle = setInterval(() => {\r\n  \r\n      if (color[0] < randColorRgb[0]) {\r\n        color.splice(0, 1, color[0]+1) \r\n        \r\n      } else if (color[0] > randColorRgb[0]) {\r\n        color.splice(0, 1, color[0]-1)\r\n      } \r\n\r\n      if (color[1] < randColorRgb[1]) {\r\n        color.splice(1, 1, color[1]+1) \r\n        \r\n      } else if (color[1] > randColorRgb[1]) {\r\n        color.splice(1, 1, color[1]-1);\r\n      } \r\n\r\n      if (color[2] < randColorRgb[2]) {\r\n        color.splice(2, 1, color[2]+1);\r\n        \r\n      } else if (color[2] > randColorRgb[2]) {\r\n        color.splice(2, 1, color[2]-1);\r\n      } \r\n    \r\n      function componentToHex(c) {\r\n          var hex = c.toString(16);\r\n          return hex.length === 1 ? \"0\" + hex : hex;\r\n      }\r\n      function rgbToHex(r, g, b) {\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b)\r\n      }\r\n    this.setState({\r\n    \r\n      [key]: `${rgbToHex(color[0], color[1], color[2])}`,\r\n      \r\n    \r\n  })\r\n  if (Math.abs(color[0] - randColorRgb[0]) === 0 && \r\n      Math.abs(color[1] - randColorRgb[1]) === 0 &&\r\n      Math.abs(color[2] - randColorRgb[2]) === 0) {\r\n        clearInterval(cycle);\r\n        this.colorTransform(this.state[key], key);\r\n      }\r\n}, 30)\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n  \r\n  setTimeout(() => {\r\n    for (let color in this.state) {\r\n      this.colorTransform(this.state[color], color);\r\n    }\r\n  \r\n    },3000);\r\n}\r\n\r\n  render() {\r\n    \r\n    \r\n    \r\n    return (\r\n\r\n    <Svg \r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox={this.props.data.attributes.viewBox}\r\n      // width={this.props.data.attributes.width}\r\n      // height={this.props.data.attributes.height}\r\n      height={this.props.height}\r\n      id={this.props.id}\r\n      paths={this.props.data.children}\r\n      wholeJson={this.props.data}\r\n      pathStyleState={this.state}\r\n      style={this.props.style}\r\n      preserveAspectRatio={this.props.preserveAspectRatio}\r\n\r\n    >\r\n    </Svg> \r\n\r\n    )}\r\n\r\n  }\r\n\r\n    export default SvgJsonContainer ;","import \"./breakpoints.css\";\nimport React from 'react';\nimport SvgJsonContainer from './SvgJsonContainer';\nconst data = require('./mars.json');\n\n\nclass Profile extends React.Component {\n\nrender() {\n  return (\n      <div className='container' style={{display: 'flex', flexDirection: 'column',  marginTop:'.5vh', marginLeft: '.5vw'}}>\n        <div >\n          <SvgJsonContainer className=\"imageContainer\" preserveAspectRatio=\"xMidYMid meet\" height='85vh' style={{ marginLeft: 'auto', marginRight: 'auto' }}   data={data} />\n        </div>  \n        <div style={{height: '10vh', fontSize: '2vh', alignText: 'left'}}>\n          <h1 style={{margin: '0 ', padding: '0'}}>\n            ReactJS NodeJS SQL NoSQL SVG\n          </h1>\n          <div style={{height: '30%', alignText: 'left'}}>\n          <h1 style={{margin: '0 ', padding: '0'}}>\n            Tobia Giachetti\n          </h1>\n          <div><a style={{ marginRight: '1em'}} href=\"mailto:tgiachett@gmail.com\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width='3vh' viewBox=\"0 0 24 24\">\n                <path d=\"M0 3v18h24v-18h-24zm21.518 2l-9.518 7.713-9.518-7.713h19.036zm-19.518 14v-11.817l10 8.104 10-8.104v11.817h-20z\"/>\n              </svg>\n            </a>\n            <a style={{marginRight: '1em'}} href=\"https://www.linkedin.com/in/tobia-giachetti/\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width='3vh' viewBox=\"0 0 24 24\">\n                <path  d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\"/>\n              </svg>\n            </a>\n            <a style={{marginRight: '1em'}} href=\"https://github.com/tgiachett\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width='3vh'  viewBox=\"0 0 24 24\">\n                <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\n              </svg>\n            </a>\n            </div>\n          \n            \n          </div>\n          \n        </div>\n      </div>\n    \n  );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n// import './App.css';\nimport Profile from './components/Profile/Profile'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Profile />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}