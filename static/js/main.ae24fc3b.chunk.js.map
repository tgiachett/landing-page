{"version":3,"sources":["components/Profile/Svg.jsx","components/Profile/SvgJsonContainer.jsx","components/Profile/Profile.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Svg","pathsSet","_this","this","props","paths","map","p","i","react_default","a","createElement","key","d","attributes","fill","pathStyleState","concat","xmlns","viewBox","width","height","id","style","preserveAspectRatio","version","React","Component","SvgJsonContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getInitialColorState","initialColorState","length","hextoRgb","hex","indexOf","slice","parseInt","channelToHex","channel","toString","rgbToHex","r","g","b","getRandomColor","color","Math","floor","random","colorTransform","orig","targetColorRgb","cycle","setInterval","abs","clearInterval","state","splice","setState","defineProperty","data","children","_this2","setTimeout","Profile_Svg","wholeJson","require","Profile","className","display","flexDirection","marginTop","marginLeft","Profile_SvgJsonContainer","marginRight","fontSize","alignText","margin","padding","float","href","App","components_Profile_Profile","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ae24fc3b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Svg extends React.Component {\r\n  \r\n  render() {\r\n    let pathsSet;\r\n    \r\n    if (this.props.paths != null) {\r\n      pathsSet = this.props.paths.map((p,i)=> {\r\n         \r\n          return <path key={i} d={p.attributes.d} fill={this.props.pathStyleState[`style${i}`]}/>;\r\n         \r\n      });\r\n    }\r\n    \r\n    \r\n    return (\r\n\r\n    <svg\r\n    xmlns={this.props.xmlns}\r\n    viewBox={this.props.viewBox}\r\n    width={this.props.width}\r\n    height={this.props.height}\r\n    id={this.props.id}\r\n    style={this.props.style}\r\n    preserveAspectRatio={this.props.preserveAspectRatio}\r\n    version=\"1.1\">\r\n\r\n\r\n      \r\n    {pathsSet}\r\n\r\n    </svg> \r\n\r\n    );}\r\n\r\n  }\r\n\r\n    export default Svg ;\r\n","import React from 'react';\r\nimport Svg from './Svg';\r\n\r\nclass SvgJsonContainer extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        const paths = this.props.data.children;\r\n        this.state = this.getInitialColorState(paths);\r\n    }\r\n\r\n    //helper method that loads initial state of colors from svg paths data\r\n    getInitialColorState = (paths) => {\r\n        let initialColorState = {};\r\n        for (let i = 0; i < paths.length; i++) {\r\n            initialColorState[`style${i}`] = paths[i].attributes.fill;\r\n        }\r\n        return initialColorState;\r\n    }\r\n    //helper method for converting hex colors to rgb\r\n    hextoRgb = (hex) => {\r\n        if (hex.indexOf('#') === 0) {\r\n            hex = hex.slice(1);\r\n        }\r\n        \r\n        let r = parseInt(hex.slice(0, 2), 16),\r\n            g = parseInt(hex.slice(2, 4), 16),\r\n            b = parseInt(hex.slice(4, 6), 16);\r\n        return [r, g, b];\r\n    }\r\n\r\n    //helper method to go convert each channel to base 16\r\n    channelToHex = (channel) => {\r\n        const hex = channel.toString(16);\r\n        return hex.length === 1 ? \"0\" + hex : hex;\r\n    }\r\n\r\n    //helper method to assemble hex from red green and blue hex channels\r\n    rgbToHex = (r, g, b) => {\r\n        return \"#\" + this.channelToHex(r) + this.channelToHex(g) + this.channelToHex(b);\r\n    }\r\n    //helper method that gets a random hex color\r\n    getRandomColor =() => {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    // the main color transformation method\r\n    colorTransform = (orig, key) => {\r\n        let color = this.hextoRgb(orig),\r\n            targetColorRgb = this.hextoRgb(this.getRandomColor());\r\n        // refactor determine negative or positive vector for each\r\n        //set an interval for each value clearing the interval when each channel is done\r\n\r\n        // for (let i = 0; color.length; i++) {\r\n        //     let deltaSign = color[i]\r\n        // }\r\n        // function cycleOne (deltaSign, src, target) {\r\n            \r\n        // }\r\n\r\n        let cycle = setInterval(() => {\r\n\r\n            if (Math.abs(color[0] - targetColorRgb[0]) === 0 && \r\n                Math.abs(color[1] - targetColorRgb[1]) === 0 &&\r\n                Math.abs(color[2] - targetColorRgb[2]) === 0) {\r\n                clearInterval(cycle);\r\n                //repeat with new color source value\r\n                this.colorTransform(this.state[key], key);\r\n            } else {\r\n                if (color[0] < targetColorRgb[0]) {\r\n                    color.splice(0, 1, color[0]+1); \r\n                    \r\n                } else if (color[0] > targetColorRgb[0]) {\r\n                    color.splice(0, 1, color[0]-1);\r\n                } \r\n                \r\n                if (color[1] < targetColorRgb[1]) {\r\n                    color.splice(1, 1, color[1]+1) ;\r\n                    \r\n                } else if (color[1] > targetColorRgb[1]) {\r\n                    color.splice(1, 1, color[1]-1);\r\n                } \r\n                \r\n                if (color[2] < targetColorRgb[2]) {\r\n                    color.splice(2, 1, color[2]+1);\r\n                    \r\n                } else if (color[2] > targetColorRgb[2]) {\r\n                    color.splice(2, 1, color[2]-1);\r\n                } \r\n            }\r\n            this.setState({\r\n                \r\n                [key]: `${this.rgbToHex(color)}`,\r\n                \r\n                \r\n            });\r\n            \r\n        }, 30);\r\n    }\r\n\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n        \r\n        setTimeout(() => {\r\n            for (let color in this.state) {\r\n                this.colorTransform(this.state[color], color);\r\n            }\r\n            \r\n        },3000);\r\n    }\r\n\r\n    render() {\r\n        \r\n        \r\n        \r\n        return (\r\n\r\n            <Svg \r\n              xmlns='http://www.w3.org/2000/svg'\r\n              viewBox={this.props.data.attributes.viewBox}\r\n            // width={this.props.data.attributes.width}\r\n            // height={this.props.data.attributes.height}\r\n              height={this.props.height}\r\n              id={this.props.id}\r\n              paths={this.props.data.children}\r\n              wholeJson={this.props.data}\r\n              pathStyleState={this.state}\r\n              style={this.props.style}\r\n              preserveAspectRatio={this.props.preserveAspectRatio}\r\n\r\n            >\r\n            </Svg> \r\n\r\n        );}\r\n\r\n}\r\n\r\nexport default SvgJsonContainer ;\r\n","import \"./breakpoints.css\";\r\nimport React from 'react';\r\nimport SvgJsonContainer from './SvgJsonContainer';\r\nconst data = require('./mars.json');\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className='container' style={{display: 'flex', flexDirection: 'column',  marginTop:'.5vh', marginLeft: '.5vw'}}>\r\n          <div>\r\n            <SvgJsonContainer className=\"imageContainer\" preserveAspectRatio=\"xMidYMid meet\" height='85vh' style={{ marginLeft: 'auto', marginRight: 'auto' }}   data={data} />\r\n          </div>  \r\n          <div style={{height: '20px', fontSize: '2vh', alignText: 'left'}}>\r\n            <h1 style={{margin: '0 ', padding: '0'}}>\r\n            ReactJS NodeJS SQL NoSQL SVG\r\n            </h1>\r\n            <div style={{height: '30%', alignText: 'left'}}>\r\n              <h1 style={{margin: '0 ', padding: '0'}}>\r\n            Tobia Giachetti\r\n              </h1>\r\n              <div>\r\n                <div style={{ display: 'float', marginRight: '1em'}}>\r\n\t         \r\n\t          <div style={{ float: 'left', marginLeft: '.25em'}}>tgiachett@gmail.com</div>\r\n                </div>\r\n                <br/>\r\n                \r\n                <a  href=\"https://www.linkedin.com/in/tobia-giachetti/\">\r\n                  <svg style={{marginLeft: '.25em', marginRight: '.5em', marginTop: '.5em'}} xmlns=\"http://www.w3.org/2000/svg\" width='30px' viewBox=\"0 0 24 24\">\r\n                    <path  d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\"/>\r\n                  </svg>\r\n                </a>\r\n                <a href=\"https://github.com/tgiachett\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width='30px'  viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\r\n                  </svg>\r\n                </a>\r\n              </div>\r\n          \r\n            \r\n            </div>\r\n          \r\n          </div>\r\n        </div>\r\n    \r\n  );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n// import './App.css';\r\nimport Profile from './components/Profile/Profile';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Profile />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}